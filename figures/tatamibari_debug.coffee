parse = (key) ->
  if key?
    match = /^([0-9]*)([\-+| ]?)$/.exec key
    unless match?
      throw new Error "invalid key '#{key}'"
    number = parseInt match[1]
    number = undefined if isNaN number
    number: number
    symbol: match[2]
  else
    number: undefined
    symbol: undefined

horiz = '<rect x="-30" y="-10" width="60" height="20"/>'
vert = '<rect x="-10" y="-30" width="20" height="60"/>'
plus = "#{horiz}\n#{vert}"
mapSymbol =
  '-': horiz
  '|': vert
  '+': plus
  '': ''
  ' ': ''

## Color list generated by http://phrogz.net/css/distinct-colors.html
## using hue from 0 to 360 step 8, saturation from 100% to 25% step 25%,
## value from 100% to 50% step 25%.
colors = ["#ff4040", "#7f2020", "#ffc8bf", "#806860", "#bf4d00", "#ffb380", "#ff8800", "#ffbf40", "#7f6c20", "#fff2bf", "#eeff00", "#468020", "#73ff40", "#d0ffbf", "#30bf7c", "#40807b", "#00eeff", "#00aaff", "#8fafbf", "#004480", "#4073ff", "#0022ff", "#bfbfff", "#220080", "#bf40ff", "#734080", "#fbbfff", "#ff00cc", "#ff0066", "#7f2046", "#bf6086"]

(key) -> ->
  tile = parse key
  if tile.number?
    color = colors[tile.number %% colors.length]
  else
    color = 'none'
  neighbors = [key, @neighbor(-1,0).key, @neighbor(0,-1).key, @neighbor(-1,-1).key]
  neighbors = (parse(neighbor).number for neighbor in neighbors)
  neighbors.sort()
  four = (neighbors[3]? and
          neighbors[0] != neighbors[1] != neighbors[2] != neighbors[3])
  """
    <symbol viewBox="-50 -50 100 100" overflowBox="-52.5 -52.5 105 105" style="overflow: visible">
      <rect x="-50" y="-50" width="100" height="100" fill="#{color}"/>
      #{if parse(@neighbor(-1,0).key).number != tile.number and tile.number? then '<line x1="-50" y1="-50" x2="-50" y2="50" stroke="black" stroke-width="5" stroke-linecap="round"/>' else ''}
      #{if parse(@neighbor(0,-1).key).number != tile.number and tile.number? then '<line x1="-50" y1="-50" x2="50" y2="-50" stroke="black" stroke-width="5" stroke-linecap="round"/>' else ''}
      #{if parse(@neighbor(1,0).key).number != tile.number and not parse(@neighbor(1,0).key).number? then '<line x1="50" y1="-50" x2="50" y2="50" stroke="black" stroke-width="5" stroke-linecap="round"/>' else ''}
      #{if parse(@neighbor(0,1).key).number != tile.number and not parse(@neighbor(0,1).key).number? then '<line x1="-50" y1="50" x2="50" y2="50" stroke="black" stroke-width="5" stroke-linecap="round"/>' else ''}
      #{mapSymbol[tile.symbol]}
      #{if four then '<circle cx="-50" cy="-50" r="20" fill="white" stroke="black" stroke-width="15"/>' else ''}
    </symbol>

  """
